<% provide(:title, 'Room '+@room_id) %>
<style type="text/css">
.panel.col-md-4 {
  padding-right:0pc;
  padding-left: 0px;
}

.row {  /*needed to correctly center row*/
  margin-left:  auto;
  
}

#file.form-control, label.form-control {
	vertical-align:top;
	border:none;
	padding-right:0px;
	padding-left:0px;
	padding-bottom:0px;
	margin-left:0px;
	margin-bottom:0px;
	height:auto;
	box-shadow:none;
	width:50%;
}
</style>

<div class="container-fluid">

  <div class="alert alert-info alert-dismissable">
    <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
    To invite someone into the chat room, copy the URL at the top in your browser address bar and send it to them.
  </div>

  <div class="row">
    <div class="panel panel-default col-md-4">
      <div class="panel-heading">
        <h4 class="panel-title">Participants</h4>
      </div>
      <div class="panel-body">
        <div id="participant_list" ></div>
      </div>
    </div>

    <div class="col-md-8">
      <div class="well">
        <div id="messages" ></div>
      </div>
    </div>
  </div>

  <%= form_tag("new_msg", :id=>"chat-form", :class=>"form-horizontal", :autocomplete=>"off") do %>
    <%= text_field_tag(:message, nil, :class =>"form-control") %>
    <%= submit_tag("Send", :class=>"btn btn-default form-control", :id=>"send-msg") %>
  <% end %>

  
  <%= form_tag({:controller => "upload", :action => "upload"}, :id=>"upload-form", :multipart => true, :class=>"form-inline") do %>
    <div class="form-group">
    <label for="upload_file" class="form-control">Upload File :</label>
    <%= file_field 'upload', 'datafile', :id=>"file", :class=>"form-control" %>
    <%= submit_tag "Upload", :id=>"upload-file", :class =>"btn btn-default form-control" %>
	</div>
  <% end %>

</div>


<!-- JS logic -->
<script type="text/javascript">

//
// Scroll to the bottom of the container.
//
var scrollToBottom = function(container) {
  var message_pool = $(container);
  message_pool.scrollTop(message_pool.get(0).scrollHeight);
};

// participant list
var participants = [];

var addParticipant = function(participant) {
  console.log(participant);
  if (participants.indexOf(participant) === -1)
  {
    participants.push(participant);
    participants.sort();
  }
};

var removeParticipant = function(participant) {
  var new_list = [""];
  for (p in participants)
  {
    if (participants[p] !== participant)
      new_list.push(participants[p]);
  }
  new_list.sort();
  participants = new_list;
};

var refreshParticipantList = function() {
  $("#participant_list").empty();
  for (p in participants)
    $("#participant_list").append($("<p></p>").html(participants[p]));
};

// logic to figure out room id
var room_id = <%= @room_id %>;
var room_path = "/messages/public/" + room_id;
// message container type
var container = "<p style=\"color: grey;\"></p>";

$(document).ready(function(){
  //######################################################################
  // auto resize message output box. 
  var size_ratio2 = 0.47;
  $("#messages").height($(window).height() * 0.5);
  $("#participant_list").height($(window).height() * size_ratio2);
  $(window).resize(function(){
    var window_height = $(window).height();
    $("#messages").height(window_height * 0.5);
    $("#participant_list").height(window_height * size_ratio2);
  });

  //######################################################################

  //######################################################################
  // Create a new client to connect to Faye
  var client // declare the client variable first.

  // load the Faye JS and initiate the client. 
  var host = "http://" + location.host.split(":")[0];
  $.getScript(host + ":9292/faye.js")
  .done(function( script, textStatus ) {
    console.log("load Faye JS success");
    client = new Faye.Client(host + ":9292/faye");
    client.disable("autodisconnect");

    client.on("transport:up", function() {
      console.log("online");
      $("#messages").append($(container).html("The client is online."));
      scrollToBottom("#messages");
    });
    client.on("transport:down", function() {
      console.log("offline");
      $("#messages").append($(container).html("The client is offline. Try refreshing or openning a new window."));
      scrollToBottom("#messages");
    });

    // Subscribe to the public channel
    var public_subscription
    = client.subscribe(room_path, function(data) {
      if (data.type === "text_message") {
        console.log("User said something.");

        var name_node = $("<span style=\"color: green;\"></span>");
        name_node.html(data.username);
        var msg_node  = $("<span style=\"color: black;\"></span>");
        msg_node.html(data.msg);

        var entry_node = $(container);
        entry_node.append(name_node);
        entry_node.append(" : ");
        entry_node.append(msg_node);

        $("#messages").append(entry_node);

        addParticipant(data.username);
      }
      else if (data.type === "user_left") {
        console.log("User left.");
        $("#messages").append($(container).html("(" + data.username + ": left the room)"));
        removeParticipant(data.username);
      }
      else if (data.type === "user_join") {
        console.log("User joined.");
        $("#messages").append($(container).html("(" + data.username + ": entered the room)"));
        addParticipant(data.username);
      }
      refreshParticipantList();

      scrollToBottom("#messages");
    });

    // on connection
    public_subscription.then(function() {
      console.log("Chat room connected!");
      $("#messages").append($(container).html("Connected to chat room."));
      scrollToBottom("#messages");
    });

    // Notify room participants user joined the room.
    client.publish(room_path, {
      type:     "user_join",
      username: "<%= @username %>"
    });
  })
  .fail(function( jqxhr, settings, exception ) {
    console.log("load JS fail");
  });

  //Notify room participants user leaving the room.
  //  NOTE: this does not work at all because Faye seem to catch the message and disconnects first.
  $(window).bind("beforeunload", function(){
    client.publish(room_path, {
      type:     "user_left",
      username: "<%= @username %>"
    });
  });
  $(window).bind("unload", function(){
    client.disconnect();
  });  

  // Handle form submissions and post messages to faye
  $("#chat-form").submit(function(){
    // Publish the message to the public channel
    client.publish(room_path, {
      type:     "text_message",
      username: "<%= @username %>",
      msg:      $("#message").val()
    });

    $("#message").val(""); // Clear the message box

    scrollToBottom("#messages");

    // Don't actually submit the form, otherwise the page will refresh.
    return false;
  });
  //######################################################################

  //######################################################################
  // File upload
  //######################################################################
  $("#upload-form").submit(function() {
    console.log("Submiting form...");
    var dataToSubmit = new FormData(this);//new FormData($(this)); //$(this).serialize();
    $.ajax({
      url:          $(this).attr('action'),
      data:         dataToSubmit,
      //dataType:     "json", // can't be json.
      type:         'POST',
      contentType:  false,
      processData:  false,
      cache:        false
    }).done(function(json){
      console.log("Upload success!");
      alert("Success!");
    }).fail(function(){
      console.log("upload failure!");
      alert("Failure!");
    });

    return false;
  });
  //######################################################################

});

</script>
